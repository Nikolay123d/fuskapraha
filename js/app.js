import { firebaseConfig, ADMIN_EMAIL } from './config.js';
import { initializeApp } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js";
import { getAuth, onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword, GoogleAuthProvider, signInWithPopup, sendPasswordResetEmail, signOut, setPersistence, browserLocalPersistence, browserSessionPersistence } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-auth.js";
import { getDatabase, ref as dbRef, onChildAdded, onValue, off, push, set, get, update, serverTimestamp, query, limitToLast } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-database.js";
import { getStorage, ref as sRef, uploadBytes, getDownloadURL } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-storage.js";
const app = initializeApp(firebaseConfig); const db = getDatabase(app); const auth = getAuth(app); const storage = getStorage(app);
try{ await setPersistence(auth, browserLocalPersistence) }catch(e){ await setPersistence(auth, browserSessionPersistence) }
const $=s=>document.querySelector(s), $$=s=>document.querySelectorAll(s);
const toast=t=>{const n=document.createElement('div');n.className='toast';n.textContent=t;$('#toastBox').append(n);setTimeout(()=>n.remove(),2200)};
const fmt=v=>new Date(v||Date.now()).toLocaleString();
let me=null,currentCity='Praha',users=new Map(),dmPeer=null,chatOff=null,rentOff=null;
$('#citySelect').addEventListener('change',e=>{currentCity=e.target.value;listenCity();loadPOI();});
$('#btnProfile').onclick=()=>openProfileModal(); $('#btnMembers').onclick=()=>$('#membersModal').hidden=false; $('#membersModal .close').onclick=()=>$('#membersModal').hidden=true;
$('#btnLogin').onclick=async()=>{const em=$('#loginEmail').value.trim(),pw=$('#loginPass').value.trim();if(!em||!pw)return toast('Email/–ü–∞—Ä–æ–ª—å?');await signInWithEmailAndPassword(auth,em,pw)};
$('#btnReg').onclick=async()=>{const em=$('#loginEmail').value.trim(),pw=$('#loginPass').value.trim();if(!em||!pw)return toast('Email/–ü–∞—Ä–æ–ª—å?');const r=await createUserWithEmailAndPassword(auth,em,pw);await savePublic(r.user)};
$('#btnGoogle').onclick=async()=>{const r=await signInWithPopup(auth,new GoogleAuthProvider());await savePublic(r.user)};
$('#btnReset').onclick=async()=>{const em=$('#loginEmail').value.trim();if(!em)return toast('Email?');await sendPasswordResetEmail(auth,em);toast('–õ–∏—Å—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ')};
$('#btnLogout').onclick=()=>signOut(auth);
onAuthStateChanged(auth, async u=>{ me=u||null; if(me){ await savePublic(me); await autoFriend(); } renderProfile(); });
async function savePublic(u){ const name=(u.displayName||u.email.split('@')[0]); const photo=u.photoURL||''; await set(dbRef(db,'usersPublic/'+u.uid),{uid:u.uid,name,photo,email:u.email,ts:serverTimestamp()}) }
async function autoFriend(){ const sn=await get(dbRef(db,'usersPublic')); let adminUid=null; sn.forEach(ch=>{const v=ch.val(); if(v.email===ADMIN_EMAIL) adminUid=v.uid}); if(!adminUid||!me||adminUid===me.uid) return; const A=dbRef(db,'friends/'+me.uid+'/'+adminUid),B=dbRef(db,'friends/'+adminUid+'/'+me.uid); const ex=await get(A).then(s=>s.exists()); if(!ex){ await update(A,{ok:true,ts:Date.now()}); await update(B,{ok:true,ts:Date.now()}); toast('üéâ –ê–¥–º—ñ–Ω–∞ –¥–æ–¥–∞–Ω–æ —É –¥—Ä—É–∑—ñ') } }
onValue(dbRef(db,'usersPublic'),sn=>{users.clear();const box=$('#membersList');box.innerHTML='';sn.forEach(ch=>{const v=ch.val();users.set(v.uid,v);const row=document.createElement('div');row.className='member';row.innerHTML=`<img class="avatar" src="${v.photo||''}"/><div class="col"><b>${v.name}</b><div class="muted">${v.email||''}</div></div><button data-uid="${v.uid}" class="dm">‚úâÔ∏è</button>`;box.append(row)});box.onclick=e=>{const uid=e.target.dataset.uid;if(!uid)return;$('#dmTab').click();openDM(uid)};renderProfile();});
function renderProfile(){ if(!me){$('#profileBox').innerHTML='<div class="muted">–£–≤—ñ–π–¥—ñ—Ç—å –∞–±–æ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å</div>'} else { const u=users.get(me.uid)||{name:me.email,photo:''}; $('#profileBox').innerHTML=`<div class="row"><img class="avatar" src="${u.photo||''}"/><div><h3>${u.name}</h3><div class="muted">${me.email}</div></div></div>`; } }
$('#profileModal .close').onclick=()=>$('#profileModal').hidden=true; function openProfileModal(){ $('#profileModal').hidden=false }
function renderMsg(m,box){const u=users.get(m.uid)||{name:'–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á',photo:''};const el=document.createElement('div');el.className='msg';el.innerHTML=`<img class="avatar" src="${u.photo||''}"/><div><div class="name">${u.name}</div><div class="meta">${fmt(m.ts)}</div>${m.text?`<div class="text">${m.text.replace(/[&<>]/g,'')}</div>`:''}${m.photo?`<img class="pic" src="${m.photo}">`:''}</div>`;box.append(el);box.scrollTop=box.scrollHeight}
function listenCity(){ if(chatOff) off(chatOff); if(rentOff) off(rentOff); $('#chatList').innerHTML=''; $('#rentList').innerHTML=''; chatOff=onChildAdded(query(dbRef(db,'messages/'+currentCity),limitToLast(50)),s=>renderMsg(s.val(),$('#chatList'))); rentOff=onChildAdded(query(dbRef(db,'rentMessages/'+currentCity),limitToLast(50)),s=>renderMsg(s.val(),$('#rentList'))); }
listenCity();
async function upload(file,path){const r=sRef(storage,`${path}/${Date.now()}_${file.name}`);await uploadBytes(r,file);return await getDownloadURL(r)}
$('#chatPhoto').addEventListener('change',e=>{ if(e.target.files?.[0]) toast('‚úîÔ∏è –§–æ—Ç–æ –¥–æ–¥–∞–Ω–æ. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ ‚Äî –∑‚Äô—è–≤–∏—Ç—å—Å—è —É —Å—Ç—Ä—ñ—á—Ü—ñ.') });
$('#rentPhoto').addEventListener('change',e=>{ if(e.target.files?.[0]) toast('‚úîÔ∏è –§–æ—Ç–æ –¥–æ–¥–∞–Ω–æ. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ ‚Äî –∑‚Äô—è–≤–∏—Ç—å—Å—è —É —Å—Ç—Ä—ñ—á—Ü—ñ.') });
$('#chatSend').onclick=()=>send(false); $('#rentSend').onclick=()=>send(true);
async function send(isRent){ if(!me){$('#profileModal').hidden=false;return} const te=isRent?$('#rentText'):$('#chatText'); const fe=isRent?$('#rentPhoto'):$('#chatPhoto'); let url=''; if(fe.files?.[0]) url=await upload(fe.files[0],`uploads/${me.uid}`); const msg={uid:me.uid,text:(te.value||'').trim(),photo:url,ts:Date.now()}; await push(dbRef(db,(isRent?'rentMessages/':'messages/')+currentCity),msg); te.value=''; fe.value=''; if(url) toast('üì∏ –§–æ—Ç–æ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ') }
function openDM(uid){ dmPeer=uid; $('#dmList').innerHTML=''; onValue(dbRef(db,'dm/'+[me.uid,uid].sort().join('_')),sn=>{ $('#dmList').innerHTML=''; sn.forEach(ch=>renderMsg(ch.val(),$('#dmList'))) }) }
$('#dmPhoto').addEventListener('change',e=>{ if(e.target.files?.[0]) toast('‚úîÔ∏è –§–æ—Ç–æ –¥–æ–¥–∞–Ω–æ. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ ‚Äî –∑‚Äô—è–≤–∏—Ç—å—Å—è —É –ø–µ—Ä–µ–ø–∏—Å—Ü—ñ.') });
$('#dmSend').onclick=async()=>{ if(!me||!dmPeer) return; let url=''; if($('#dmPhoto').files?.[0]) url=await upload($('#dmPhoto').files[0],`uploads/${me.uid}`); const key=[me.uid,dmPeer].sort().join('_'); await push(dbRef(db,'dm/'+key),{uid:me.uid,text:($('#dmText').value||'').trim(),photo:url,ts:Date.now()}); $('#dmText').value=''; $('#dmPhoto').value=''; if(url) toast('üì∏ –§–æ—Ç–æ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ –¥–æ –õ–°') }
import "https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"; let map=L.map('map').setView([50.087,14.42],12); L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{attribution:'&copy; OSM'}).addTo(map); const markers=[]; function clearM(){markers.forEach(m=>m.remove());markers.length=0} function loadPOI(){ clearM(); onValue(dbRef(db,'map/poi/'+currentCity),sn=>{ clearM(); sn.forEach(ch=>{const p=ch.val(); const m=L.marker([p.lat,p.lng]).addTo(map); const img=p.photo?`<img src="${p.photo}" style="max-width:160px;border-radius:8px;margin:6px 0">`:''; const a=p.link?`<div><a target="_blank" href="${p.link}">–ü–æ—Å–∏–ª–∞–Ω–Ω—è</a></div>`:''; m.bindPopup(`<b>${p.title||''}</b><div style='font-size:12px;color:#99a6bd'>${p.type||''}</div>${img}${a}`); markers.push(m) }) }) } loadPOI();
$('#addPoi').onclick=async()=>{ if(!me)return toast('–£–≤—ñ–π–¥—ñ—Ç—å'); const c=map.getCenter(); const title=$('#poiTitle').value.trim(); if(!title) return toast('–ù–∞–∑–≤–∞?'); await push(dbRef(db,'map/poi/'+currentCity),{title,type:$('#poiType').value,photo:$('#poiPhoto').value.trim(),link:$('#poiLink').value.trim(),lat:c.lat,lng:c.lng,ts:Date.now()}); toast('‚úÖ –î–æ–¥–∞–Ω–æ —Ç–æ—á–∫—É') };
onValue(dbRef(db,'help/'+currentCity),sn=>{ const box=$('#helpList'); box.innerHTML=''; sn.forEach(ch=>{const v=ch.val(); const card=document.createElement('div'); card.className='card'; if(v.photo) card.innerHTML+=`<img src="${v.photo}">`; card.innerHTML+=`<div class="p"><div>${(v.text||'')}</div>${v.link?`<div style="margin-top:.4rem"><a target="_blank" href="${v.link}">–ü–µ—Ä–µ–π—Ç–∏</a></div>`:''}</div>`; box.append(card) }) });
$('#helpPost').onclick=async()=>{ if(!me) return toast('–£–≤—ñ–π–¥—ñ—Ç—å'); const t=$('#helpText').value.trim(); if(!t) return; await push(dbRef(db,'help/'+currentCity),{uid:me.uid,text:t,link:$('#helpLink').value.trim(),photo:$('#helpPhotoUrl').value.trim(),ts:Date.now()}); $('#helpText').value=''; $('#helpLink').value=''; $('#helpPhotoUrl').value=''; toast('üÜò –û–≥–æ–ª–æ—à–µ–Ω–Ω—è –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ') };
onValue(dbRef(db,'usersPublic'),sn=>{ const isAdmin=me && Object.values(sn.val()||{}).some(v=>v.email===ADMIN_EMAIL && v.uid===me.uid); $$('.adminOnly').forEach(e=> e.style.display=isAdmin?'block':'none') });
window.addEventListener('keydown',e=>{ if(e.key==='Escape'){ $('#membersModal').hidden=true; $('#profileModal').hidden=true } });
